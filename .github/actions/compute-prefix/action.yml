name: "Compute matrix variant's prefix"
description: 'Computes the appropriate prefix for the different jobs of the matrix variant'
inputs:
  ORIGINAL_PREFIX:
    description: "The image's prefix before the tag, i.e <registry>/<repo>:<tag>"
    required: true
  IMAGE_REPOSITORY:
    description: 'The repository for the current matrix variant'
    required: true
  BUILD_TYPE:
    description: 'The build type (gotten from the calling workflow)'
    required: true
outputs:
  FULL_PREFIX:
    description: "The prefix computed based on the build type"
    value: ${{ steps.compute-prefix.outputs.FULL_PREFIX }}
  USED_REPO:
    description: "The determined repository to use given the build type"
    value: ${{ steps.compute-prefix.outputs.USED_REPO }}
  TAG_PREFIX:
    description: "The string to use to decorate the tag since we're pushing to staging for PRs. We use this string to identify the actual repository the image belongs to"
    value: ${{ steps.compute-prefix.outputs.TAG_PREFIX }}
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Compute Prefixes
      id: compute-prefix
      # This is needed because we push to a non-prod repository for PRs (staging).
      # For non-PR workflows, the target repository is part of the original matrix
      # determined in the compute-matrix step of the build-and-publish-images 
      # workflow (i.e from axis.yaml).
      run: |
        FULL_PREFIX="${{ inputs.ORIGINAL_PREFIX }}"
        USED_REPO="${{ inputs.IMAGE_REPOSITORY }}"
        TAG_PREFIX=""

        if [[ "${{ inputs.BUILD_TYPE }}" == "pull-request" ]]; then
          # then we must form a non-prod tag.
          pr_num="${GITHUB_REF_NAME##*/}"

          USED_REPO="staging"
          TAG_PREFIX="${{ inputs.IMAGE_REPOSITORY }}-${pr_num}-"
          FULL_PREFIX="rapidsai/${USED_REPO}:${TAG_PREFIX}"
        fi

        echo "FULL_PREFIX=${FULL_PREFIX}" | tee -a ${GITHUB_OUTPUT}
        echo "USED_REPO=${USED_REPO}" | tee -a ${GITHUB_OUTPUT}
        echo "TAG_PREFIX=${TAG_PREFIX}" | tee -a ${GITHUB_OUTPUT}
      shell: bash
