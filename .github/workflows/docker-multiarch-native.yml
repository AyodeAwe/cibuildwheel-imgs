name: Build docker multiarch images with buildx natively (no QEMU)

on:
  workflow_call:
    inputs:
      # workflow inputs
      matrix_script:
        required: false
        default: "./ci/compute-matrix.sh"
        type: string

      # git metadata
      repo:
        type: string
      branch:
        type: string
      date:
        type: string
      sha:
        type: string
      build_type:
        required: true
        type: string
      push:
        required: false
        type: boolean
        default: false

permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  discussions: none
  id-token: write
  issues: none
  packages: read
  pages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  compute-matrix:
    runs-on: ubuntu-latest
    outputs:
      MATRIX: ${{ steps.compute-matrix.outputs.MATRIX }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Compute matrix
        id: compute-matrix
        run: ${{ inputs.matrix_script }}
  docker-build-arch:
    needs: compute-matrix
    strategy:
      matrix: ${{ fromJSON(needs.compute-matrix.outputs.MATRIX) }}
    runs-on: ${{ fromJSON(matrix.runner_arch != 'arm64' && '"ubuntu-latest"' || '"linux-arm64-cpu4"') }}
    env:
      RAPIDS_BUILD_TYPE: ${{ inputs.build_type }}
      DOCKER_BUILDKIT: 1
    steps:
      - name: Get AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          role-duration-seconds: 43200 # 12h
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: ${{ contains(matrix.build_image, 'manylinux') }}
      - name: Standardize repository information
        uses: rapidsai/shared-action-workflows/rapids-github-info@branch-23.04
        with:
          repo: ${{ inputs.repo }}
          branch: ${{ inputs.branch }}
          date: ${{ inputs.date }}
          sha: ${{ inputs.sha }}
      - name: Download and untar gha-tools from sevag's fork
        run: |
          set -x
          sudo apt-get update -y && sudo apt-get install -y awscli git
          git clone https://github.com/sevagh/gha-tools -b feat/docker-s3 ./gha-tools
          chmod +x ./gha-tools/tools/*
          sudo cp ./gha-tools/tools/* /usr/bin/
      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: docker context create builders
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          endpoint: builders
      - name: Build and upload container
        run: |
          image_to_build="${{ matrix.build_image }}-$(uname -m)"
          BUILD_IMAGE=${image_to_build} ./build.sh
          rapids-upload-docker-to-s3 "${image_to_build}"
  docker-assemble-push-multiarch:
    name: assemble and push multiarch manifest
    needs: docker-build-arch
    if: inputs.push
    runs-on: "linux-amd64-cpu4"
    env:
      DOCKERHUB_USERNAME: ${{ secrets.GPUCIBOT_DOCKERHUB_USER }}
      DOCKERHUB_TOKEN: ${{ secrets.GPUCIBOT_DOCKERHUB_TOKEN }}
      RAPIDS_BUILD_TYPE: ${{ inputs.build_type }}
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Get AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          role-duration-seconds: 43200 # 12h
      - name: Checkout
        uses: actions/checkout@v3
      - name: Standardize repository information
        uses: rapidsai/shared-action-workflows/rapids-github-info@branch-23.04
        with:
          repo: ${{ inputs.repo }}
          branch: ${{ inputs.branch }}
          date: ${{ inputs.date }}
          sha: ${{ inputs.sha }}
      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: docker context create builders
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          endpoint: builders
      - if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Download and untar gha-tools
        run: |
          set -x
          sudo apt-get update -y && sudo apt-get install -y awscli git wget
          wget https://github.com/rapidsai/skopeo/releases/download/v1.12/skopeo-linux-amd64 -O ./skopeo
          chmod +x ./skopeo && sudo cp ./skopeo /usr/bin/
          git clone https://github.com/sevagh/gha-tools -b feat/docker-s3 ./gha-tools
          chmod +x ./gha-tools/tools/*
          sudo cp ./gha-tools/tools/* /usr/bin/
      - name: Assemble multiarch manifest from s3
        id: manifests-create
        run: |
          set -x
          manifests_to_push=$(rapids-docker-multiarch-from-s3)
          echo "MANIFESTS_TO_PUSH=${manifests_to_push}" >> "${GITHUB_OUTPUT}"
      - name: Push multiarch manifests from s3
        run: |
          set -x
          for manifest in ${{ steps.manifests-create.outputs.MANIFESTS_TO_PUSH }}; do
            echo "copying multiarch manifest with skopeo: ${manifest}"
            skopeo copy --multi-arch=all --src-tls-verify=false "docker://localhost:5000/${manifest}" "docker://docker.io/${manifest}"
          done
