name: Build and push image variant

on:
  workflow_call:
    inputs:
      ARCHES:
        required: true
        type: string
      CUDA_VER:
        required: true
        type: string
      LINUX_VER:
        required: true
        type: string
      PYTHON_VER:
        required: true
        type: string
      IMAGE_REPO:
        required: true
        type: string
      TAG:
        required: true
        type: string
      BUILD_TYPE:
        required: true
        type: string

jobs:
  get-real-tag:
    runs-on: ubuntu-latest
    outputs:
      REAL_TAG: ${{ steps.get-real-tag.outputs.REAL_TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get Real Tag
        id: get-real-tag
        # TODO: This should be a separate action?
        # This is needed because we push to a non-prod repository for PRs.
        # For non-PR workflows, the target repository is part of the original matrix
        # determined in the compute-matrix step of the build-and-publish-images 
        # workflow (i.e from axis.yaml).
        run: |
          REAL_TAG=${{ inputs.TAG }}
          if [[ "${{ inputs.BUILD_TYPE }}" == "pull-request" ]]; then
            # then we must form a non-prod tag.
            pr_num="${GITHUB_REF_NAME##*/}"
            TAG_PREFIX="${{ inputs.IMAGE_REPO }}-${pr_num}-"
            NON_PROD_TAG="rapidsai/staging:${TAG_PREFIX}cuda${{ inputs.CUDA_VER }}-${{ inputs.LINUX_VER }}-py${{ inputs.PYTHON_VER }}"
            REAL_TAG=${NON_PROD_TAG}
          fi
          echo "REAL_TAG=${REAL_TAG}" >> $GITHUB_OUTPUT
  docker-build:
    needs: get-real-tag
    strategy:
      matrix:
        ARCH: ${{ fromJSON(inputs.ARCHES) }}
        CUDA_VER: ["${{ inputs.CUDA_VER }}"]
        LINUX_VER: ["${{ inputs.LINUX_VER }}"]
        PYTHON_VER: ["${{ inputs.PYTHON_VER }}"]
      fail-fast: false
    runs-on: "linux-${{ matrix.ARCH }}-cpu4"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.GPUCIBOT_DOCKERHUB_USER }}
          password: ${{ secrets.GPUCIBOT_DOCKERHUB_TOKEN }}
      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builders
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker
          endpoint: builders
      - name: Get Real Arch and Manylinux Version
        id: get-real-arch
        run: |
          REAL_ARCH=$(arch)
          echo "REAL_ARCH=${REAL_ARCH}" >> $GITHUB_OUTPUT
          if [[ "${{ inputs.LINUX_VER }}" == "ubuntu20.04" || "${{ inputs.LINUX_VER }}" == "ubuntu18.04" ]]; then
            echo "MANYLINUX_VER=manylinux_2_31" >> $GITHUB_OUTPUT
          else
            echo "MANYLINUX_VER=manylinux_2_17" >> $GITHUB_OUTPUT
          fi
      - name: Build image
        if: 
        uses: docker/build-push-action@v4
        with:
          context: ./${{ inputs.IMAGE_REPO }}
          file: ./${{ inputs.IMAGE_REPO }}/Dockerfile
          push: ${{ inputs.BUILD_TYPE == 'branch' }}
          pull: true
          build-args: |
            CUDA_VER=${{ inputs.CUDA_VER }}
            LINUX_VER=${{ inputs.LINUX_VER }}
            PYTHON_VER=${{ inputs.PYTHON_VER }}
            CPU_ARCH=${{ matrix.ARCH }}
            REAL_ARCH=${{ steps.get-real-arch.outputs.REAL_ARCH }}
            MANYLINUX_VER=${{ steps.get-real-arch.outputs.MANYLINUX_VER }}
          tags: ${{ needs.get-real-tag.outputs.REAL_TAG }}-${{ matrix.ARCH }}
